// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  //engineType = "binary" // if you using replit than use this to fix error
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Guild {
  id      String  @id @default(auto()) @map("_id") @db.ObjectId
  guildId String  @unique
  prefix  String? @default("!")
  setup   Setup?
  stay    stay?
  dj      Dj?
  botchannel Botchannel?
  premium Premium?
}

model Setup {
  id      String  @id @map("_id") @db.ObjectId
  guildId String  @map("guildId") @db.ObjectId
  guild   Guild   @relation(fields: [guildId], references: [id])
  channel String? @map("channelId") @db.ObjectId
  message String? @map("messageId") @db.ObjectId

  @@unique([guildId])
}

model stay {
  id      String  @id @map("_id") @db.ObjectId
  guildId String  @map("guildId") @db.ObjectId
  guild   Guild   @relation(fields: [guildId], references: [id])
  channel String? @map("channelId") @db.ObjectId
  voice   String? @map("voiceId") @db.ObjectId

  @@unique([guildId])
}

model Botchannel {
  id      String  @id @map("_id") @db.ObjectId
  guildId String  @map("guildId") @db.ObjectId
  guild   Guild   @relation(fields: [guildId], references: [id])
  channel String? @map("channelId") @db.ObjectId

  @@unique([guildId])
}
model Dj {
  id      String  @id @map("_id") @db.ObjectId
  guildId String  @map("guildId") @db.ObjectId
  guild   Guild   @relation(fields: [guildId], references: [id])
  role    String[]

  @@unique([guildId])
}

model User {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  userId   String  @unique
  playlists Playlist[]
  premium  Premium?

}

model Playlist {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  userId   String  @map("userId") @db.ObjectId
  user     User    @relation(fields: [userId], references: [id])
  name     String
  songs    String[]

  @@unique([userId, name])
}

model Premium {
  isPremium Boolean @default(false)
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  userId    String  @unique @map("userId") @db.ObjectId
  guildId   String  @unique @map("guildId") @db.ObjectId
  user      User?   @relation(fields: [userId], references: [id])
  guild     Guild?  @relation(fields: [guildId], references: [id])
}